.Java AWT Visualizer to suggest UPenn Course Schedules

For our final project, we have created a Java AWT visualizer program that is essentially a graphical iteration of creating a sample 
suggested course schedule for a student at the University of Pennsylvania. To give it a simple name, we made an algorithm that suggests 
future course schedulesfor UPenn students with a GUI. It leverages a directed acyclic graph (DAG) of classes and utilizes the prereqs 
for a given major using web scraping and graph visualization. We also have a generic algorithm to dictate how classes will be suggested. 
Utilizing the prerequisite information for a given course and past classes a student has taken, we offer a viable sample course schedule 
for any student's future semester. 

Categories Used:

Graph and graph algorithms - For constructing the entire structure of storing class schedule information, pre-requisite information, 
and past classes a student has taken we utilized a directed acyclic graph for storage. This allows for simple storage of class information 
and allows us to easily access which path/major a student is requesting to create a schedule from. 

Document Search (aka Information Retrieval) - For retrieving class information we used common web scrapping techniques using regex structures 
and iterating through the UPenn course website. By going through each major we are able to extract course pre-requisite information and match 
it to credit/course requirements for each major. 

Advanced topics related to the class - Recommendations - For our advanced topic, we make recommendations to students on what they should take 
for their next semester schedule. We do this by looking at what courses a student has already taken, pre-requisite information of a given course, 
and what credit requirements their specific major requires. 

Work Breakdown - 
Lance - java.awt/webscraping/graph visualizing
Luka - webscraping/graph algorithm
Sachith - graph algorithm/writeup









 

